{"version":3,"sources":["hoc/withAuthRedirect.js","components/profile/posts/Posts.module.css","components/profile/Profile.module.css","components/profile/ProfileInfo/ProfileInfo.module.css","components/profile/ProfileInfo/ProfileStatus.jsx","components/profile/ProfileInfo/ProfileInfo.jsx","components/profile/posts/post/Post.jsx","components/profile/posts/PostForm.jsx","components/profile/posts/Posts.jsx","components/profile/posts/PostsContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx"],"names":["withAuthRedirect","Component","AuthRedirect","this","props","isAuth","to","React","connect","mapStateToProps","state","auth","module","exports","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","target","value","ProfileInfo","profileInfo","className","s","pic","src","photos","large","DefaultUserImg","width","alt","text","fullName","userId","contacts","instagram","facebook","twitter","aboutMe","Preloader","Post","author_image","author","date","like_count","minLength1","minLengthValidator","maxLength300","maxLengthValidator","PostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextareaProfile","name","textarea","rows","cols","validate","required","cominput","Posts","memo","postsElemets","data","reverse","map","post","content","formData","addPost","postMessage","PostsContainer","profilePage","postData","Profile","ProfileContainer","match","params","getProfile","getStatus","compose","id","withRouter"],"mappings":"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","file":"static/js/4.c8de6c35.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class AuthRedirect extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth){return <Redirect to=\"/login\"/>}\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let AuthConnectedRedirect = connect(mapStateToProps)(AuthRedirect)\r\n    return AuthConnectedRedirect\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"Posts_textarea__GKj3r\",\"cominput\":\"Posts_cominput__BMiSf\",\"text\":\"Posts_text__1PTc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__lT-26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__1DCnB\",\"pic\":\"ProfileInfo_pic__2j4Tv\",\"text\":\"ProfileInfo_text__22XSw\"};","import React, {useState, useEffect} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () =>{\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n    let setEditModeValue = () => {setEditMode(true)}\r\n\r\n    let unSetEditMode = () =>{\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let onChange = (e) =>{setStatus(e.target.value)}\r\n\r\n        return (\r\n            <>\r\n                {!editMode &&\r\n                    <span onDoubleClick={setEditModeValue}><b>Status</b>: {props.status !== null? props.status: \"‎\"}</span>\r\n                }\r\n                {editMode &&\r\n                     <span><b>Status</b>:<input autoFocus={true} onBlur={unSetEditMode} onChange={onChange}\r\n                         value={status}/></span>\r\n                }\r\n            </>\r\n        )\r\n\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport DefaultUserImg from \"./../../../media/images/user.png\"\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profileInfo){\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <img\r\n                className={s.pic}\r\n                src={props.profileInfo.photos.large !==null ? props.profileInfo.photos.large:DefaultUserImg}\r\n                width=\"160px\"\r\n                alt=\"\"\r\n            />\r\n            <div className={s.text}>\r\n                <h2>{props.profileInfo.fullName !==null ? props.profileInfo.fullName : \"‎\"}</h2>\r\n                <ProfileStatus isAuth = {props.isAuth} status = {props.status} updateStatus = {props.updateStatus} userId = {props.userId}/>\r\n                <br/>\r\n                <b>Instagram</b> : {props.profileInfo.contacts.instagram !==null ? props.profileInfo.contacts.instagram: \"‎\"}\r\n                <br/>\r\n                <b>Facebook</b> : {props.profileInfo.contacts.facebook !==null ? props.profileInfo.contacts.facebook: \"‎\"}\r\n                <br/>\r\n                <b>Twitter</b> : {props.profileInfo.contacts.twitter !==null ? props.profileInfo.contacts.twitter:\"‎\"}\r\n                <br/>\r\n                <b>About me</b>: {props.profileInfo.aboutMe !== null? props.profileInfo.aboutMe: \"‎\"}\r\n                <br/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className=\"comment\">\r\n      <NavLink className=\"avatar\" to=\"/#\">\r\n        <img src={props.author_image} alt=\"\" />\r\n      </NavLink>\r\n      <div className=\"content\">\r\n        <NavLink className=\"author\" to=\"/#\">\r\n          {props.author}\r\n        </NavLink>\r\n        <div className=\"metadata\">\r\n          <span className=\"date\">{props.date}</span>\r\n        </div>\r\n        <div className=\"text\">{props.text}</div>\r\n        <div className=\"actions\">\r\n          <NavLink className=\"reply\" to=\"/#\">\r\n            Reply\r\n          </NavLink>\r\n          <NavLink className=\"reply\" to=\"/#\">\r\n            {props.like_count} Likes\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from \"./Posts.module.css\";\r\nimport {maxLengthValidator, minLengthValidator, required} from \"../../../addons/validators/validators\";\r\nimport {TextareaProfile} from \"../../common/Textarea\";\r\n\r\nlet minLength1 = minLengthValidator(1)\r\nlet maxLength300 = maxLengthValidator(300)\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={TextareaProfile} name={\"postMessage\"} className={s.textarea} rows=\"3\" cols=\"110\" validate = {[required, minLength1, maxLength300]}/>\r\n            <p className={s.cominput}>\r\n                <button className=\"ui tiny primary button\" >Save</button>\r\n            </p>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nlet PostFormRedux = reduxForm({form: \"postForm\"})(PostForm)\r\nexport default PostFormRedux","import React from \"react\";\r\nimport s from \"./Posts.module.css\";\r\nimport Post from \"./post/Post\";\r\nimport PostFormRedux from \"./PostForm\";\r\n\r\n\r\nconst Posts = React.memo(props => {\r\n\r\n    let postsElemets = [...props.data].reverse().map(post => {\r\n        return (\r\n            <Post\r\n                author_image={post.author_image}\r\n                author={post.author}\r\n                text={post.text}\r\n                date={post.date}\r\n                like_count={post.like_count}\r\n            />\r\n        )\r\n    })\r\n    let onSubmit = (formData) => {\r\n        props.addPost(formData.postMessage)\r\n        formData.postMessage = \"\"\r\n    }\r\n    return (\r\n        <div className={s.content}>\r\n            <h3 className={s.text}>Leave your comment here</h3>\r\n            <PostFormRedux onSubmit={onSubmit}/>\r\n            <div className=\"ui comments\">\r\n                {postsElemets}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Posts;\r\n","import {addPost} from \"../../../redux/profileReducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        data: state.profilePage.postData,\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n    },)(Posts)\r\n\r\nexport default PostsContainer;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"./posts/PostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profileInfo = {props.profileInfo} status ={props.status} updateStatus = {props.updateStatus} isAuth = {props.isAuth}/>\r\n            <PostsContainer/>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nclass ProfileContainer extends React.Component{\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (this.props.isAuth && !userId) {\r\n            userId = this.props.userId\r\n        }\r\n\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Profile {...this.props}  userId = {this.userId}\r\n                         profileInfo={this.props.profileInfo} status = {this.props.status} updateStatus = {this.props.updateStatus}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profileInfo: state.profilePage.profileInfo,\r\n    status: state.profilePage.status,\r\n    isAuth:state.auth.isAuth,\r\n    userId: state.auth.id\r\n})\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}