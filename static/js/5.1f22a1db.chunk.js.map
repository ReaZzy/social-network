{"version":3,"sources":["components/Users/users.module.css","addons/searchForm.module.css","addons/Paginator.tsx","components/Users/User.tsx","addons/searchForm.tsx","components/Users/Users.tsx","redux/usersSelector.js","components/Users/UsersContainer.tsx"],"names":["module","exports","Paginator","state","currentPage","props","pagesCount","Math","ceil","totalCount","count","handlePageChange","pageNumber","setState","setPageUsers","currentTerm","itemClass","s","listPage","pageRangeDisplayed","activePage","this","itemsCountPerPage","totalItemsCount","activeClass","onChange","bind","React","Component","User","idUser","name","followLoading","setFollow","setUnfollow","followed","status","photos","startDialog","className","user","to","src","small","DefaultUserImg","alt","toString","img","description","button","chatButton","onClick","unfollow","disabled","some","id","SearchForm","reduxForm","form","handleSubmit","onSubmit","search","Field","component","searchTextArea","cols","rows","searchButton","Users","setUsersPage","users","usersList","map","u","key","undefinedUser","InitialValues","searchField","all","title","formData","initialValues","usersss","getFollowLoading","getUsersState","getTotalCount","getCount","getCurrentPage","getSsLoading","isLoading","getCurrentTerm","UsersAPI","length","Preloader","setPageU","UsersContainer","connect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,IAAM,mBAAmB,YAAc,2BAA2B,KAAO,oBAAoB,KAAO,oBAAoB,OAAS,sBAAsB,YAAc,2BAA2B,SAAW,wBAAwB,QAAU,uBAAuB,SAAW,wBAAwB,WAAa,0BAA0B,cAAgB,+B,oBCA7YD,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,OAAS,2BAA2B,aAAe,mC,yJCyC1GC,E,4MA3BXC,MAAQ,CACJC,YAAa,EAAKC,MAAMD,a,EAG5BE,WAAaC,KAAKC,KAAK,EAAKH,MAAMI,WAAa,EAAKJ,MAAMK,O,EAC1DC,iBAAmB,SAACC,GAChB,EAAKC,SAAS,CAACT,YAAYQ,IAAa,WACpC,EAAKP,MAAMS,aAAa,EAAEF,EAAY,EAAKP,MAAMU,iB,uDAKrD,OACI,6BACI,kBAAC,IAAD,CACIC,UAAaC,IAAEC,SACfC,mBAAoB,GACpBC,WAAcC,KAAKlB,MAAMC,YACzBkB,kBAAqB,EACrBC,gBAAiBF,KAAKf,WACtBkB,YAAeP,IAAEb,YACjBqB,SAAUJ,KAAKV,iBAAiBe,KAAKL,a,GAtBjCM,IAAMC,W,yBC4BfC,EArBkB,SAAC,GAAiG,IAAhGC,EAA+F,EAA/FA,OAAQC,EAAuF,EAAvFA,KAAMC,EAAiF,EAAjFA,cAAeC,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,YAAaC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,OAAOC,EAAiB,EAAjBA,YAC7G,OAAO,6BACH,yBAAKC,UAAWtB,IAAEuB,MACd,kBAAC,IAAD,CAASC,GAAI,YAAcX,GAA3B,IAAoC,yBAAKY,IAAsB,OAAjBL,EAAOM,MAC/CN,EAAOM,MACPC,IAAgBC,IAAKf,EAAOgB,WACKP,UAAWtB,IAAE8B,MAHpD,KAIA,kBAAC,IAAD,CAASN,GAAI,YAAcX,GACvB,yBAAKS,UAAWtB,IAAEc,MAAOA,IAE7B,yBAAKQ,UAAWtB,IAAE+B,aACd,2BAAe,KAAXZ,EAAgBA,EAAS,WAE7B,kBAAC,IAAD,CAASK,GAAM,YAAcX,EAAQS,UAAWtB,IAAEgC,OAAS,IAAMhC,IAAEiC,WAAYC,QAAW,WAAKb,EAAYR,KAA3G,QACHK,EACK,4BAAQI,UAAWtB,IAAEgC,OAAS,IAAMhC,IAAEmC,SAAUC,SAAUrB,EAAcsB,MAAK,SAAAC,GAAE,OAAIzB,IAAWyB,KAAKJ,QAAS,WAAOjB,EAAYJ,KAA/H,YACA,4BAAQS,UAAWtB,IAAEgC,OAAQI,SAAUrB,EAAcsB,MAAK,SAAAC,GAAE,OAAIzB,IAAWyB,KAAKJ,QAAS,WAAOlB,EAAUH,KAA1G,a,6CCfH0B,EAHIC,YAAqB,CAACC,KAAK,eAA3BD,EAXqB,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aACtC,OACI,wBAAMC,SAAUD,GACZ,uBAAKpB,UAAWtB,IAAE4C,QACd,gBAACC,EAAA,EAAD,CAAOC,UAAW,WAAYhC,KAAM,cAAeQ,UAAWtB,IAAE+C,eAAgBC,KAAM,GAAIC,KAAM,IAChG,0BAAQ3B,UAAWtB,IAAEkD,cAAc,gBAAC,IAAD,YCqDpCC,EAlCqB,SAAC,GAA4G,IAA3GrD,EAA0G,EAA1GA,YAAasD,EAA6F,EAA7FA,aAAc5D,EAA+E,EAA/EA,WAAYC,EAAmE,EAAnEA,MAAON,EAA4D,EAA5DA,YAAaU,EAA+C,EAA/CA,aAAcwD,EAAiC,EAAjCA,MAAMhC,EAA2B,EAA3BA,YAAgBjC,EAAW,sHAEtIkE,EAAYD,EAAME,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMC,IAAOD,EAAElB,GAAIzB,OAAQ2C,EAAElB,GAAIxB,KAAM0C,EAAE1C,KAAMC,cAAe3B,EAAM2B,cAC7DC,UAAW5B,EAAM4B,UAAWC,YAAa7B,EAAM6B,YAC/CC,SAAUsC,EAAEtC,SAAUC,OAAQqC,EAAErC,OAAQC,OAAQoC,EAAEpC,OAClDC,YAAcA,OAEhDqC,EAAgB,wBAAIpC,UAAYtB,IAAE0D,eAAlB,SACiB5D,EADjB,kBAShB6D,EAAgB,CAClBC,YAAa9D,GAEjB,OACI,yBAAKwB,UAAWtB,IAAE6D,KACd,yBAAKvC,UAAWtB,IAAE8D,OAAlB,SACA,yBAAKxC,UAAWtB,IAAE8D,OAAlB,SAEA,kBAAC,EAAD,CAAYnB,SAdH,SAACoB,GACdX,EAAa,EAAE,EAAEjE,EAAY4E,EAASH,cAaFI,cAAeL,IAC/C,yBAAKrC,UAAWtB,IAAEiE,SACbzE,EAAY8D,EAAYI,GAE7B,kBAAC,EAAD,CAAWlE,WAAcA,EAAYC,MAAOA,EAAON,YAAaA,EAAaU,aAAgBA,EAAcC,YAAaA,M,QC5DvHoE,EAAmB,SAAChF,GAAW,OAAOA,EAAMmE,MAAMtC,eAClDoD,EAAgB,SAACjF,GAAW,OAAOA,EAAMmE,MAAMA,OAC/Ce,EAAgB,SAAClF,GAAW,OAAOA,EAAMmE,MAAM7D,YAC/C6E,EAAW,SAACnF,GAAW,OAAOA,EAAMmE,MAAM5D,OAC1C6E,EAAiB,SAACpF,GAAW,OAAOA,EAAMmE,MAAMlE,aAChDoF,EAAe,SAACrF,GAAW,OAAOA,EAAMmE,MAAMmB,WAC9CC,EAAiB,SAACvF,GAAW,OAAOA,EAAMmE,MAAMvD,a,QC2CvD4E,E,kLAEEtE,KAAKhB,MAAMgE,aAAahD,KAAKhB,MAAMiE,MAAMsB,OAAQvE,KAAKhB,MAAMK,MAAOW,KAAKhB,MAAMD,YAAaiB,KAAKhB,MAAMU,e,+BAItG,OAAQ,oCACCM,KAAKhB,MAAMoF,UACN,kBAACI,EAAA,EAAD,MACA,kBAAC,EAAD,CAAOpF,WAAYY,KAAKhB,MAAMI,WACvBM,YAAeM,KAAKhB,MAAMU,YAC1BsD,aAAchD,KAAKhB,MAAMgE,aACzB3D,MAAOW,KAAKhB,MAAMK,MAAO4D,MAAOjD,KAAKhB,MAAMiE,MAAOlE,YAAaiB,KAAKhB,MAAMD,YAC1EU,aAAcO,KAAKhB,MAAMyF,SACzB7D,UAAWZ,KAAKhB,MAAM4B,UAAWD,cAAeX,KAAKhB,MAAM2B,cAC3DE,YAAab,KAAKhB,MAAM6B,YACxBI,YAAcjB,KAAKhB,MAAMiC,mB,GAhB/BX,IAAMC,WAsCvBmE,EAAiBC,aAbD,SAAC7F,GACnB,MAAO,CACH6B,cAAemD,EAAiBhF,GAChCmE,MAAOc,EAAcjF,GACrBM,WAAY4E,EAAclF,GAC1BO,MAAO4E,EAASnF,GAChBC,YAAamF,EAAepF,GAC5BsF,UAAWD,EAAarF,GACxBY,YAAa2E,EAAevF,MAK6D,CAC7F8B,cAAWnB,iBAAcuD,iBAAcyB,aAAU5D,gBACjDI,iBAFmB0D,CAIpBL,GAEYI","file":"static/js/5.1f22a1db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"users_title__3k4uo\",\"img\":\"users_img__26kuM\",\"description\":\"users_description__vcTkJ\",\"name\":\"users_name__3Y4A9\",\"user\":\"users_user__sxYQ4\",\"button\":\"users_button__scq0d\",\"currentPage\":\"users_currentPage__24LrX\",\"listPage\":\"users_listPage__2CWr1\",\"usersss\":\"users_usersss__2a-UG\",\"unfollow\":\"users_unfollow__Cj2-T\",\"chatButton\":\"users_chatButton__2_Egr\",\"undefinedUser\":\"users_undefinedUser__3Asmf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchTextArea\":\"searchForm_searchTextArea__10ZvN\",\"search\":\"searchForm_search__27kGh\",\"searchButton\":\"searchForm_searchButton__ai4L6\"};","import React from \"react\";\r\nimport s from \"../components/Users/users.module.css\";\r\nimport Pagination from \"react-js-pagination\";\r\n\r\ntype PaginatorType = {\r\n    currentPage: number\r\n    setPageUsers: (number:number, pageNumber:number, term?:string) => void\r\n    pageNumber?: number\r\n    totalCount: number\r\n    count: number\r\n    pagesCount?: number\r\n    currentTerm: string\r\n}\r\n\r\nclass Paginator extends React.Component<PaginatorType, {currentPage:number}> {\r\n    state = {\r\n        currentPage: this.props.currentPage\r\n    }\r\n\r\n    pagesCount = Math.ceil(this.props.totalCount / this.props.count)\r\n    handlePageChange = (pageNumber:number) =>{\r\n        this.setState({currentPage:pageNumber}, () => {\r\n            this.props.setPageUsers(7,pageNumber, this.props.currentTerm)\r\n        });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Pagination\r\n                    itemClass = {s.listPage}\r\n                    pageRangeDisplayed={10}\r\n                    activePage = {this.state.currentPage}\r\n                    itemsCountPerPage = {1}\r\n                    totalItemsCount={this.pagesCount}\r\n                    activeClass = {s.currentPage}\r\n                    onChange={this.handlePageChange.bind(this)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Paginator","import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport DefaultUserImg from \"../../media/images/user.png\";\r\n\r\ntype PropsTypes = {\r\n    idUser:number\r\n    name:string\r\n    followLoading: Array<number>\r\n    setFollow: (id:number) => void\r\n    setUnfollow: (id:number) => void\r\n    followed: boolean\r\n    status:string\r\n    startDialog: (id:number) => void\r\n    photos: {\r\n        small:string\r\n        large:string\r\n    }\r\n}\r\n\r\n\r\nconst User:React.FC<PropsTypes> =({idUser, name, followLoading, setFollow, setUnfollow, followed, status, photos,startDialog}) => {\r\n    return <div >\r\n        <div className={s.user}>\r\n            <NavLink to={\"/profile/\" + idUser}> <img src={photos.small !== null\r\n                ? photos.small\r\n                : DefaultUserImg} alt={idUser.toString()}\r\n                                                   className={s.img}/> </NavLink>\r\n            <NavLink to={\"/profile/\" + idUser}>\r\n                <div className={s.name}>{name}</div>\r\n            </NavLink>\r\n            <div className={s.description}>\r\n                <p>{status !== \"\" ? status : \"â€Ž\"}</p>\r\n            </div>\r\n                <NavLink to = {`messages/` + idUser} className={s.button + \" \" + s.chatButton} onClick = {()=>{startDialog(idUser)}}>Chat</NavLink>\r\n            {followed\r\n                ? <button className={s.button + \" \" + s.unfollow} disabled={followLoading.some(id => idUser === id)} onClick={() => {setUnfollow(idUser)}}>Unfollow</button>\r\n                : <button className={s.button} disabled={followLoading.some(id => idUser === id)} onClick={() => {setFollow(idUser)}}>Follow</button>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default User","import * as React from \"react\";\r\nimport {BsSearch} from \"react-icons/bs\";\r\nimport s from \"./searchForm.module.css\"\r\nimport {reduxForm, Field} from \"redux-form\";\r\ntype PropsType = {\r\n    handleSubmit:any\r\n}\r\n\r\nconst SearchForm1:React.FC<PropsType> = ({handleSubmit}) => {\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={s.search}>\r\n                <Field component={\"textarea\"} name={\"searchField\"} className={s.searchTextArea} cols={78} rows={1}/>\r\n                <button className={s.searchButton}><BsSearch/></button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst SearchForm = reduxForm<PropsType>({form:\"search-form\"})(SearchForm1)\r\n\r\n\r\nexport default SearchForm\r\n","import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport Paginator from \"../../addons/Paginator\";\r\nimport User from \"./User\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport SearchForm from \"../../addons/searchForm\";\r\n\r\ntype PropsType = {\r\n    totalCount: number\r\n    setFollow: (userId:number) => void\r\n    setUnfollow: (userId:number) => void\r\n    count: number\r\n    currentPage: number\r\n    currentTerm: any\r\n    followLoading: Array<number>\r\n    setPageUsers: (number:number, pageNumber:number, term?: string) => void\r\n    setUsersPage: (length:number, count:number, currentPage:number, term?:string) => void\r\n    startDialog: (userId:number) => void\r\n    users: Array<{\r\n        id:number\r\n        name:string\r\n        followed: boolean\r\n        status:string\r\n        photos: {\r\n            small:string\r\n            large:string\r\n        }\r\n    }>\r\n}\r\n\r\n\r\n\r\nconst Users: React.FC<PropsType>  = ({currentTerm, setUsersPage, totalCount, count, currentPage, setPageUsers, users,startDialog, ...props}) => {\r\n\r\n    const usersList = users.map(u => <User key = {u.id} idUser={u.id} name={u.name} followLoading={props.followLoading}\r\n                                            setFollow={props.setFollow} setUnfollow={props.setUnfollow}\r\n                                            followed={u.followed} status={u.status} photos={u.photos}\r\n                                            startDialog ={startDialog}/> )\r\n\r\n    const undefinedUser = <h2 className ={s.undefinedUser}>\r\n                                    User \"{currentTerm}\" is undefined\r\n                            </h2>\r\n    const onSubmit = (formData:any) =>{\r\n        setUsersPage(0,7,currentPage,formData.searchField)\r\n    }\r\n    if (totalCount === 1) {\r\n\r\n    }\r\n    const InitialValues = {\r\n        searchField: currentTerm\r\n    }\r\n    return (\r\n        <div className={s.all}>\r\n            <div className={s.title}>USERS</div>\r\n            <div className={s.title}>USERS</div>\r\n            {/*/@ts-ignore/*/}\r\n            <SearchForm onSubmit={onSubmit} initialValues={InitialValues}/>\r\n            <div className={s.usersss}>\r\n                {totalCount? usersList : undefinedUser}\r\n            </div>\r\n            <Paginator totalCount = {totalCount} count={count} currentPage={currentPage} setPageUsers = {setPageUsers} currentTerm={currentTerm}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Users","export const getFollowLoading = (state) => {return state.users.followLoading}\r\nexport const getUsersState = (state) => {return state.users.users}\r\nexport const getTotalCount = (state) => {return state.users.totalCount}\r\nexport const getCount = (state) => {return state.users.count}\r\nexport const getCurrentPage = (state) => {return state.users.currentPage}\r\nexport const getSsLoading = (state) => {return state.users.isLoading}\r\nexport const getCurrentTerm = (state) => {return state.users.currentTerm}","import {connect} from \"react-redux\";\r\nimport {\r\n    setPageUsers,\r\n    setUsersPage, setPageU, setFollow, setUnfollow\r\n} from \"../../redux/usersReducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getCount,\r\n    getCurrentPage,\r\n    getCurrentTerm,\r\n    getFollowLoading,\r\n    getSsLoading,\r\n    getTotalCount,\r\n    getUsersState\r\n} from \"../../redux/usersSelector\";\r\nimport {startDialog} from \"../../redux/dialogsReducer\";\r\n\r\ntype MapStateToPropsType= {\r\n    followLoading: Array<number>\r\n    count:number\r\n    totalCount:number\r\n    isLoading: boolean\r\n    currentPage: number\r\n    currentTerm:string\r\n    users: Array<{\r\n        id:number\r\n        name:string\r\n        followed: boolean\r\n        status:string\r\n        photos: {\r\n            small:string\r\n            large:string\r\n        }\r\n    }>\r\n}\r\ntype DispatchType= {\r\n    setPageU: (number:number, pageNumber:number) => void\r\n    setUsersPage: (length:number, count:number, currentPage:number, term?:string) => void\r\n    setFollow: (userId:number) => void\r\n    setUnfollow: (userId:number) => void\r\n    setPageUsers: (number:number, pageNumber:number) => void\r\n    startDialog: (userId:number) => void\r\n}\r\ntype OwnPropsType= {}\r\n\r\ntype PropsType = MapStateToPropsType & DispatchType & OwnPropsType\r\n\r\nclass UsersAPI extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        this.props.setUsersPage(this.props.users.length, this.props.count, this.props.currentPage, this.props.currentTerm)\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n                {this.props.isLoading\r\n                    ? <Preloader/>\r\n                    : <Users totalCount={this.props.totalCount}\r\n                             currentTerm = {this.props.currentTerm}\r\n                             setUsersPage={this.props.setUsersPage}\r\n                             count={this.props.count} users={this.props.users} currentPage={this.props.currentPage}\r\n                             setPageUsers={this.props.setPageU}\r\n                             setFollow={this.props.setFollow} followLoading={this.props.followLoading}\r\n                             setUnfollow={this.props.setUnfollow}\r\n                             startDialog ={this.props.startDialog}\r\n                    />}\r\n\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state:any) => {\r\n    return {\r\n        followLoading: getFollowLoading(state),\r\n        users: getUsersState(state),\r\n        totalCount: getTotalCount(state),\r\n        count: getCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getSsLoading(state),\r\n        currentTerm: getCurrentTerm(state)\r\n    }\r\n}\r\n\r\n\r\nconst UsersContainer = connect<MapStateToPropsType, DispatchType, OwnPropsType>(mapStateToProps, {\r\n    setFollow, setPageUsers, setUsersPage, setPageU, setUnfollow,\r\n    startDialog,\r\n// @ts-ignore\r\n})(UsersAPI)\r\n\r\nexport default UsersContainer"],"sourceRoot":""}