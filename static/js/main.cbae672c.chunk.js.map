{"version":3,"sources":["redux/usersReducer.js","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","media/images/loading.svg","components/common/Preloader/preloader.module.css","components/common/textarea.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","redux/navbarReducer.js","redux/authReducer.js","redux/redux-store.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Navbar/FriendsNav/FriendsNav.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/header/Header.jsx","components/header/headerContainer.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","App.js","index.js","components/Login/Login.module.css","components/header/Header.module.css","components/common/Preloader/Preloader.jsx","addons/validators/validators.js","components/common/Textarea.jsx","redux/profileReducer.js","dal/api.js","components/Navbar/FriendsNav/FriendsNav.module.css","media/images/user.png","redux/dialogsReducer.js"],"names":["initialState","users","count","totalCount","currentPage","isLoading","followLoading","setCurrentPage","type","setUsers","setPageUsers","setTotalUsersCount","totalUsers","setLoading","setFollowLoading","isFollowLoading","id","setUsersPage","length","dispatch","a","getUsers","data","items","setPageU","p","setFollow","unfollowAPI","resultCode","userId","setUnfollow","followAPI","usersReducer","state","action","map","u","followed","filter","module","exports","Boolean","window","location","hostname","match","friendsData","name","img","navbarReducer","email","login","isAuth","info","loading","needCaptcha","captchaUrl","setUserData","setUserInfo","boolean","setAuth","getCaptha","getCapthaAPI","response","url","authReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","navBar","auth","app","appReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","News","props","className","s","content","Music","Settings","useState","number","setNumber","onClick","FriendsNav","friends","to","src","alt","Navbar","friendsElements","friend","key","nav","activeClassName","active","line","NavbarContainer","connect","Header","profileInfo","header","height","Login","loginButton","getProfile","exit","photos","small","DefaultUserImg","avatar","Preloader","HeaderContainer","this","setUser","React","Component","getLogin","getLoginInfo","exitAPI","reload","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","InputLogin","disabled","input","validate","required","data-validate","rememberMe","error","fieldError","width","button","setLogin","password","captcha","loginAPI","reset","message","messages","stopSubmit","_error","formData","UsersContainer","lazy","ProfileContainer","DialogsContainer","Todo","App","Suspense","fallback","path","render","get_initialize","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","minLengthValidator","minLength","value","maxLengthValidator","maxLength","TextareaDialogs","meta","textareaDialogs","touched","alert","TextareaProfile","alertProfile","alertLogin","TextareaTodo","textareaTodo","alertTodo","InputProfileData","postData","author_image","author","text","date","like_count","profileInfoLoading","status","photoLoading","setStatus","savePhotoDone","file","setPhotoLoading","getStatus","getStatusAPI","updateStatus","updateStatusAPI","getProfileInfo","addPost","postText","addPost1","saveProfile","profile","saveProfileAPI","Promise","reject","savePhoto","savePhotoAPI","newPost","like_cout","instance","axios","withCredentials","headers","baseURL","get","delete","post","put","getDialogsAPI","startDialogAPI","getMessagesAPI","page","sendMessageAPI","body","deleteMessageAPI","messageId","image","FormData","append","dialogsData","messageData","dialogsLoading","messagesLoading","getDialogsPage","dialogs","startDialog","getMessagesList","messageList","sendMessage","deleteMessage","reverse"],"mappings":"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","file":"static/js/main.cbae672c.chunk.js","sourcesContent":["import {followAPI, getUsers, unfollowAPI} from \"../dal/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UNFOLLOW = \"UNFOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_PAGE_USERS = \"SET_PAGE_USERS\"\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nconst SET_LOADING = \"SET_LOADING\"\r\nconst SET_FOLLOW_LOADING = \"SET_FOLLOW_LOADING\"\r\nconst SET_CURRENT_PAGE = \"users/SET_CURRENT_PAGE\"\r\n\r\nlet initialState = {\r\n    users: [],\r\n    count: 7,\r\n    totalCount: null,\r\n    currentPage: 1,\r\n    isLoading: true,\r\n    followLoading: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n        case SET_PAGE_USERS:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalCount: action.totalUsers\r\n            }\r\n\r\n        case SET_LOADING:\r\n            return {...state, isLoading: action.isLoading}\r\n        case SET_FOLLOW_LOADING:\r\n            return {\r\n                ...state,\r\n                followLoading: action.isFollowLoading\r\n                    ? [...state.followLoading, action.id]\r\n                    : state.followLoading.filter(id => id !== action.id)\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nconst follow = (userId) => ({type: FOLLOW, userId})\r\nconst unfollow = (userId) => ({type: UNFOLLOW, userId})\r\nconst setCurrentPage = (currentPage)=> ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setPageUsers = (currentPage) => ({type: SET_PAGE_USERS, currentPage})\r\nexport const setTotalUsersCount = (totalUsers) => ({type: SET_TOTAL_USERS_COUNT, totalUsers})\r\nexport const setLoading = (isLoading) => ({type: SET_LOADING, isLoading})\r\nexport const setFollowLoading = (isFollowLoading, id) => ({type: SET_FOLLOW_LOADING, isFollowLoading, id})\r\n\r\nexport const setUsersPage = (length, count, currentPage) => async (dispatch) => {\r\n    if (length === 0) {\r\n        dispatch(setLoading(true))\r\n        let data = await  getUsers(count, currentPage)\r\n        dispatch(setLoading(false))\r\n        dispatch(setCurrentPage(currentPage))\r\n        dispatch(setPageUsers(currentPage))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\nexport const setPageU = (count = 7, p) => async (dispatch) => {\r\n    dispatch(setPageUsers(p))\r\n    dispatch(setLoading(true))\r\n    let data = await getUsers(count, p)\r\n    dispatch(setLoading(false))\r\n    dispatch(setUsers(data.items))\r\n\r\n}\r\n\r\nexport const setFollow = (id) => async (dispatch) =>{\r\n    dispatch(setFollowLoading(true, id))\r\n    let data = await unfollowAPI(id)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setFollowLoading(false, id))\r\n        dispatch(follow(id))\r\n    }\r\n}\r\n\r\nexport const setUnfollow = (id) => async (dispatch) =>{\r\n    dispatch(setFollowLoading(true, id))\r\n    let data = await followAPI(id)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setFollowLoading(false, id))\r\n        dispatch(unfollow(id))\r\n    }\r\n}\r\nexport default usersReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"News_content__2vbxU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Music_content__3Nu-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Settings_content__1Rhtf\"};","module.exports = __webpack_public_path__ + \"static/media/loading.dc8b2f5f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"preloader_loading__2rBHo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaDialogs\":\"textarea_textareaDialogs__230z5\",\"error\":\"textarea_error__2rxoX\",\"alert\":\"textarea_alert__1PM9e\",\"TextareaProfile\":\"textarea_TextareaProfile__1HFjj\",\"alertProfile\":\"textarea_alertProfile__1XJBc\",\"input\":\"textarea_input__1mXDG\",\"alertLogin\":\"textarea_alertLogin__3ngPT\",\"textareaTodo\":\"textarea_textareaTodo__Dh-Oe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"Navbar_line__1bAXw\",\"active\":\"Navbar_active__22X82\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n    friendsData : [\r\n        {id: 1 , name : \"Vanja\", img : \"https://semantic-ui.com/images/avatar/small/matt.jpg\" },\r\n        {id: 2 , name : \"Бараьан\", img : \"https://semantic-ui.com/images/avatar/small/elliot.jpg\"},\r\n        {id: 3 , name : \"Bro Bann\", img : \"https://semantic-ui.com/images/avatar/small/stevie.jpg\"},\r\n    ]\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n    return {...state}\r\n}\r\n\r\nexport default navbarReducer","import {exitAPI, getCapthaAPI, getLogin, getLoginInfo, loginAPI} from \"../dal/api\";\r\nimport {reset, stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\"\r\nconst SET_USER_INFO = \"SET_USER_INFO\"\r\nconst SET_LOADING = \"SET_LOADING\"\r\nconst NEED_CAPTCHA = \"auth/NEED_CAPTCHA\"\r\nconst SET_AUTH = \"SET_AUTH\"\r\nconst SET_CAPTCHA_URL = \"SET_CAPTCHA_URL\"\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    info: null,\r\n    loading: false,\r\n    needCaptcha: false,\r\n    captchaUrl: null,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true,\r\n            }\r\n        case SET_USER_INFO :\r\n            return {...state, info: action.info}\r\n        case SET_LOADING:\r\n            return {...state, loading: action.boolean}\r\n        case SET_AUTH:\r\n            return {...state, isAuth: action.boolean}\r\n        case NEED_CAPTCHA:\r\n            return {...state, needCaptcha: true}\r\n        case SET_CAPTCHA_URL:\r\n            return {...state, captchaUrl: action.url}\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const setUserData = (id, email, login) => ({type: SET_USER_DATA, data:{id, email, login }})\r\nexport const setUserInfo = (info) => ({type: SET_USER_INFO, info})\r\nconst setLoading = (boolean) => ({type: SET_LOADING, boolean})\r\nconst setAuth = (boolean) => ({type: SET_AUTH, boolean})\r\nconst needCaptcha = () => ({type:NEED_CAPTCHA})\r\nconst setCaptchaUrl = (url) => ({type:SET_CAPTCHA_URL, url})\r\n\r\nexport const setUser = (id = 1225) => async (dispatch) => {\r\n    let data = await getLogin()\r\n    if (data.resultCode === 0){\r\n        let {id, email, login} = data.data\r\n        dispatch(setUserData(id, email, login))\r\n\r\n        let response = await getLoginInfo(id)\r\n        dispatch(setUserInfo(response.data))\r\n}}\r\n\r\nexport const setLogin = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    dispatch(setLoading(true))\r\n    let response = await  loginAPI(email, password, rememberMe, captcha)\r\n         if(response.data.resultCode === 0){\r\n             dispatch(setLoading(false))\r\n             dispatch(setAuth(true))\r\n             window.location.reload()\r\n         }\r\n        else{\r\n            if (response.data.resultCode === 10){\r\n                dispatch(getCaptha())\r\n            }\r\n             dispatch(reset(\"login\"))\r\n             let message = response.data.messages.length > 0 ? response.data.messages[0]: \"Server problem\"\r\n             dispatch(stopSubmit(\"login\", {_error:message}))\r\n        }\r\n}\r\n\r\nexport const exit = () => async (dispatch) =>{\r\n    let response = await exitAPI()\r\n        if(response.data.resultCode === 0){\r\n            dispatch(setAuth(false))\r\n            window.location.reload()\r\n        }\r\n}\r\n\r\nexport const getCaptha = () => async (dispatch) =>{\r\n    dispatch(needCaptcha())\r\n    let response = await getCapthaAPI()\r\n    dispatch(setCaptchaUrl(response.data.url))\r\n}\r\nexport default authReducer\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport navbarReducer from \"./navbarReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        navBar: navbarReducer,\r\n        users: usersReducer,\r\n        auth: authReducer,\r\n        app: appReducer,\r\n        form: formReducer,\r\n    }\r\n)\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n\r\nexport default store","import React from \"react\";\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <ul>\r\n                <h1>WOWOW NEWS</h1>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <ul>\r\n                <h1>WOWOW MUSIC</h1>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React, {useState} from \"react\";\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    let [number, setNumber] = useState(0)\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ul>\r\n                <h1>WOWOW SETTINGS</h1>\r\n                {number}\r\n                <button onClick={() => {setNumber(number+1)}}>+1</button>\r\n                <button onClick={() => {setNumber(number-1)}}>-1</button>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport s from \"./FriendsNav.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst FriendsNav = (props) =>{\r\n    return(\r\n        <div className={s.friends}>\r\n            <NavLink to={\"/friends/\" + props.id} >\r\n                <img src={props.img} alt='' className={s.img}/>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsNav;","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport FriendsNav from \"./FriendsNav/FriendsNav\";\r\n\r\nconst Navbar = (props) => {\r\n\r\n    let friendsElements = props.friendsData.map(friend => <FriendsNav img ={friend.img}  id = {friend.id} key = {friend.id}/>)\r\n\r\n  return (\r\n    <nav className={s.nav}>\r\n      <NavLink to=\"/profile\" activeClassName={s.active}>\r\n        Profile\r\n        <br />\r\n      </NavLink>\r\n      <NavLink to=\"/messages\" activeClassName={s.active}>\r\n        Messages\r\n        <br />\r\n      </NavLink>\r\n        <NavLink to=\"/todo\" activeClassName={s.active}>\r\n            Todo list\r\n            <br />\r\n        </NavLink>\r\n        <NavLink to=\"/users\" activeClassName={s.active}>\r\n            Users\r\n            <br/>\r\n        </NavLink>\r\n      <NavLink to=\"/news\" activeClassName={s.active}>\r\n        News\r\n        <br />\r\n      </NavLink>\r\n      <NavLink to=\"/music\" activeClassName={s.active}>\r\n        Music\r\n        <br />\r\n      </NavLink>\r\n      <div className={s.line}></div>\r\n      <NavLink to=\"/settings\" activeClassName={s.active}>\r\n        Settings\r\n      </NavLink>\r\n\r\n      <div>\r\n          <div className={s.line}></div>\r\n          <NavLink to=\"/friends\" activeClassName={s.active}>\r\n              Friends\r\n          </NavLink>\r\n\r\n          {friendsElements}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        friendsData: state.navBar.friendsData\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps)(Navbar)\r\n\r\nexport default NavbarContainer","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport DefaultUserImg from \"./../../media/images/user.png\"\r\n\r\nconst Header = (props) => {\r\n    if(props.isAuth === true){\r\n        if (!props.profileInfo) {\r\n            return <Preloader/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src=\"https://icon-library.com/images/github-icon-white/github-icon-white-6.jpg\"\r\n                alt=\"logo\"\r\n                height=\"34px\"\r\n            />\r\n            {props.isAuth === false\r\n                ? <NavLink to=\"/login\" className={s.Login}>\r\n                    <button className={s.loginButton}>Login</button>\r\n                </NavLink>\r\n                :<>\r\n                    <NavLink to={`/profile/${props.id}`} onClick = {()=>{props.getProfile(props.id)}}>\r\n                        <button className={s.exit} onClick={props.exit}>exit</button>\r\n                        <div className={s.info}>\r\n                            <img src={props.profileInfo.photos.small !== null ? props.profileInfo.photos.small : DefaultUserImg}\r\n                             alt=\"\" className={s.avatar}/>\r\n                            <div className={s.login}>{props.login}</div>\r\n                        </div>\r\n                </NavLink>\r\n                </>}\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {exit, setUser} from \"../../redux/authReducer\";\r\nimport Header from \"./Header\";\r\nimport {getProfile} from \"../../redux/profileReducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.setUser(this.props.id)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} isAuth = {this.props.isAuth} login ={this.props.login} exit = {this.props.exit}\r\n                       id = {this.props.id} img ={this.props.img} profileInfo ={this.props.info} getProfile = {this.props.getProfile}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{return{\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    id: state.auth.id,\r\n    info: state.auth.info,\r\n}}\r\n\r\n\r\nexport default connect(mapStateToProps, {setUser, getProfile, exit})(HeaderContainer)","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport s from \"./Login.module.css\"\r\nimport {required} from \"../../addons/validators/validators\";\r\nimport {InputLogin} from \"../common/Textarea\";\r\n\r\nconst LoginForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <label>E-mail</label>\r\n            <div>\r\n                <Field id =\"email\" placeholder={\"Email\"} name = {\"email\"} component = {InputLogin} type={\"email\"} disabled={props.isAuth} className = {s.input} validate = {[required]}/>\r\n            </div>\r\n            <label>Password</label>\r\n            <div>\r\n                <Field id={\"password\"} placeholder={\"Password\"} className = {s.input} name = {\"password\"} component = {InputLogin} type={\"password\"} disabled={props.isAuth} data-validate =\"passsword\" validate = {[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field type= {\"checkbox\"} name = {\"rememberMe\"} component = {\"input\"} disabled={props.isAuth} className={s.rememberMe}/> remember me\r\n            </div>\r\n            {props.error &&\r\n            <div className={s.fieldError}>\r\n                <span>{props.error}</span>\r\n            </div>\r\n            }\r\n\r\n            {props.needCaptcha &&<div><><img src={props.captchaUrl?props.captchaUrl:\"\"} width={\"200px\"} alt=\"\"/><Field placeholder={\"captcha\"} component={InputLogin} name={\"captcha\"} validate={[required]}/></></div>}\r\n\r\n\r\n            <div>\r\n                <button disabled={props.isAuth} className={s.button}>Login</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst LoginReduxForm = compose(\r\n    connect(mapStateToProps),\r\n    reduxForm({form:\"login\"}),\r\n)(LoginForm)\r\nexport default LoginReduxForm","import React from \"react\";\r\nimport LoginReduxForm from \"./LoginForm\"\r\nimport {connect} from \"react-redux\";\r\nimport {getCaptha, setLogin} from \"../../redux/authReducer\";\r\nimport s from \"./Login.module.css\"\r\nimport {Redirect} from \"react-router-dom\";\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) =>{\r\n        props.setLogin(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth){\r\n        return <Redirect to = \"profile\"/>\r\n    }\r\n    return (\r\n        <div className={s.form}>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit = {onSubmit} needCaptcha = {props.needCaptcha} captchaUrl={props.captchaUrl}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    isAuth: state.auth.isAuth,\r\n    needCaptcha: state.auth.needCaptcha,\r\n    captchaUrl: state.auth.captchaUrl,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {setLogin, getCaptha})(Login)","import React from \"react\";\nimport \"./App.css\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\nimport HeaderContainer from \"./components/header/headerContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {get_initialize} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\n\nconst UsersContainer = React.lazy(()=>import(\"./components/Users/UsersContainer\"))\nconst ProfileContainer = React.lazy(()=>import(\"./components/profile/ProfileContainer\"))\nconst DialogsContainer = React.lazy(()=>import(\"./components/Dialogs/DialogsContainer\"))\nconst Todo = React.lazy(()=>import(\"./components/Todo/Todo\"))\n\n\nclass App extends React.Component{\n  render() {\n\n    return (\n        <HashRouter>\n          <div>\n            <HeaderContainer />\n            <div className=\"app-wrapper\">\n              <NavbarContainer/>\n              {/*Main*/}\n              <Switch>\n              <React.Suspense fallback={<Preloader/>}>\n                <Route path=\"/profile/:userId?\" render={ () => <ProfileContainer store = {this.props.store}/> } />\n                <Route path=\"/messages/:userId?\" render={ () => <DialogsContainer/> } />\n                <Route path=\"/users\" render={ () => <UsersContainer/> } />\n                <Route path=\"/todo\" render = {()=><Todo/>}/>\n\n                {/*Other*/}\n\n                <Route path=\"/news\" render={() => <News />} />\n                <Route path=\"/music\" render={() => <Music />} />\n                <Route path=\"/settings\" render={() => <Settings />} />\n                <Route path=\"/login\" render={() => <Login/>}/>\n              </React.Suspense>\n              </Switch>\n            </div>\n          </div>\n        </HashRouter>\n    );\n  }\n};\n\n// let mapStateToProps = (state) => ({\n//   initialized : state.app.initialized\n// })\n\nexport default compose(\n    connect(null, {get_initialize}),\n\n)(App)\n","import \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./redux/redux-store\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__1Oh5U\",\"button\":\"Login_button__2_eM6\",\"rememberMe\":\"Login_rememberMe__3aWVM\",\"fieldError\":\"Login_fieldError__3az9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3NAvV\",\"loginButton\":\"Header_loginButton__3RPYY\",\"avatar\":\"Header_avatar__aCxSy\",\"login\":\"Header_login__jfCh5\",\"info\":\"Header_info__1wrJ6\",\"exit\":\"Header_exit__3CmDp\"};","import React from \"react\";\r\nimport loading from \"../../../media/images/loading.svg\";\r\nimport s from \"./preloader.module.css\"\r\n\r\nconst Preloader = () =>{\r\n    return(\r\n        <img src={loading} alt =\"\" className={s.loading}/>\r\n    )\r\n}\r\nexport default Preloader","export const minLengthValidator = (minLength) => (value) => {\r\n    if (value && value.length < minLength) return `MIN LENGTH = ${minLength}`\r\n    return undefined\r\n}\r\n\r\nexport const required = (value) =>{\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\nexport const maxLengthValidator = (maxLength) => (value) =>{\r\n    if (value && value.length <= maxLength) return undefined\r\n    return `Max lenght - ${maxLength} symbols`\r\n}","import React from \"react\";\r\nimport s from \"./textarea.module.css\"\r\n\r\nexport const TextareaDialogs = ({input, meta, ...props}) =>{\r\n    return (\r\n        <div >\r\n            <textarea {...input} className={s.textareaDialogs + \" \" + (meta.touched && meta.error ? s.error : \"\")}/>\r\n            {meta.touched && meta.error\r\n                && <div className={s.alert}>\r\n                {meta.error}\r\n                </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextareaProfile = ({input, meta, ...props}) =>{\r\n    return (\r\n        <div >\r\n            <textarea {...input} {...props} className={s.TextareaProfile + \" \" + (meta.touched && meta.error ? s.error : \"\")}/>\r\n            {meta.touched && meta.error\r\n            && <div className={s.alertProfile}>\r\n                {meta.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const InputLogin = ({input, meta, ...props}) =>{\r\n    return (\r\n        <div >\r\n            <input {...input} {...props} className={s.input + \" \" + (meta.touched && meta.error ? s.error : \"\")}/>\r\n            {meta.touched && meta.error\r\n            && <div className={s.alertLogin}>\r\n                {meta.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextareaTodo = ({input, meta, ...props}) =>{\r\n    return (\r\n        <div >\r\n            <textarea {...input} {...props} className={s.textareaTodo + \" \" + (meta.touched && meta.error ? s.error : \"\")}/>\r\n            {meta.touched && meta.error\r\n            && <div className={s.alertTodo}>\r\n                {meta.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const InputProfileData = ({input, meta, ...props}) =>{\r\n    return (\r\n        <div >\r\n            <input {...input} {...props} className={(meta.touched && meta.error ? s.error : \"\")}/>\r\n            {meta.touched && meta.error\r\n            && <div className={s.alertLogin}>\r\n                {meta.error}\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import {getProfileInfo, getStatusAPI, savePhotoAPI, saveProfileAPI, updateStatusAPI} from \"../dal/api\";\r\nimport {reset, stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = \"ADD-POST\"\r\nconst SET_PROFILE = \"SET_PROFILE\"\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst DELETE_POST = \"DELETE_POST\"\r\nconst SAVE_PHOTO_DONE = \"profile/SAVE_PHOTO_DONE\"\r\nconst SET_PHOTO_LOADING = \"profile/SET_PHOTO_LOADING\"\r\n\r\nlet initialState = {\r\n        postData : [\r\n            {\r\n                id: \"6\",\r\n                author_image: \"https://semantic-ui.com/images/avatar/small/stevie.jpg\",\r\n                author: \"Stevie Folls\",\r\n                text: \"ddd DAS\",\r\n                date: \"1 month ago\",\r\n                like_count: \"6\"\r\n            },\r\n            {\r\n                id: \"5\",\r\n                author_image: \"https://semantic-ui.com/images/avatar/small/stevie.jpg\",\r\n                author: \"Stevie Folls\",\r\n                text: \"HAHA NUBB\",\r\n                date: \"1 month ago\",\r\n                like_count: \"5\"\r\n            },\r\n            {\r\n                id: \"4\",\r\n                author_image: \"https://semantic-ui.com/images/avatar/small/stevie.jpg\",\r\n                author: \"Stevie Folls\",\r\n                text: \"Stupid monkey...\",\r\n                date: \"1 month ago\",\r\n                like_count: \"11\"\r\n            },\r\n            {\r\n                id: \"3\",\r\n                author_image: \"https://semantic-ui.com/images/avatar/small/stevie.jpg\",\r\n                author: \"Stevie Folls\",\r\n                text: \"BLABLBLALBL\",\r\n                date: \"1 month ago\",\r\n                like_count: \"11\"\r\n            },\r\n            {\r\n                id: \"2\",\r\n                author_image: \"https://semantic-ui.com/images/avatar/small/elliot.jpg\",\r\n                author: \"Stas Jordan\",\r\n                text: \":)\",\r\n                date: \"1 day ago\",\r\n                like_count: \"32\"\r\n            },\r\n            {\r\n                id: \"1\",\r\n                author_image: \"https://semantic-ui.com/images/avatar/small/matt.jpg\",\r\n                author: \"Vanja Hodynchuk\",\r\n                text: \"Very cool bro\",\r\n                date: \"now\",\r\n                like_count: \"1\"\r\n            },\r\n        ],\r\n        profileInfo : null,\r\n        profileInfoLoading: false,\r\n        status: \"\",\r\n        photoLoading: false,\r\n    }\r\n\r\nconst profileReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 7,\r\n                author: \"Unknown user\",\r\n                author_image: \"https://image.flaticon.com/icons/png/512/37/37943.png\",\r\n                text: action.postText,\r\n                date: \"now\",\r\n                like_cout: 0,\r\n            }\r\n            return {...state, postData:[...state.postData, newPost]}\r\n        }\r\n        case SET_PROFILE: {\r\n            return {...state, profileInfo: action.profileInfo}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST: {\r\n            // eslint-disable-next-line\r\n            return {...state, postData: state.postData.filter(id=> id.id != action.id)}\r\n        }\r\n        case SAVE_PHOTO_DONE: {\r\n            return {...state, profileInfo: {...state.profileInfo, photos: action.file}}\r\n        }\r\n        case SET_PHOTO_LOADING:{\r\n            return {...state, photoLoading: action.boolean}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/*ACTION CREATORS FOR PROFILE/POSTS*/\r\nexport const addPost1 =(postText)=> ({type: ADD_POST, postText})\r\nexport const setProfile = (profileInfo) => ({type: SET_PROFILE, profileInfo})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const savePhotoDone = (file) => ({type: SAVE_PHOTO_DONE, file})\r\nexport const deletePost = (id) => ({type: DELETE_POST, id})\r\nconst setPhotoLoading = (boolean) => ({type:SET_PHOTO_LOADING, boolean})\r\nexport const getStatus = (userId) => (dispatch) =>{\r\n    getStatusAPI(userId).then(response =>{\r\n        dispatch(setStatus(response.data))\r\n    })\r\n}\r\n\r\nexport const updateStatus = (status) =>  async (dispatch) =>{\r\n    let response = await  updateStatusAPI(status)\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\n\r\nexport const getProfile = (userId) => async (dispatch) =>{\r\n    let response = await getProfileInfo(userId)\r\n    dispatch(setProfile(response.data))\r\n}\r\n\r\nexport const addPost = (postText) =>  (dispatch) =>{\r\n    dispatch(addPost1(postText))\r\n    dispatch(reset('postForm'))\r\n}\r\n\r\nexport const saveProfile = (profile,userId) =>  async (dispatch) =>{\r\n    let response = await saveProfileAPI(profile)\r\n    if(response.data.resultCode === 0){\r\n        dispatch(getProfile(userId))\r\n        dispatch(reset('profileData'))\r\n    }else{\r\n        dispatch(stopSubmit(\"profileData\", {_error: response.data.messages[0]}))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) =>{\r\n    dispatch(setPhotoLoading(true))\r\n    let response = await savePhotoAPI(file)\r\n    if(response.data.resultCode === 0){\r\n        dispatch(savePhotoDone(response.data.data.photos))\r\n        dispatch(setPhotoLoading(false))\r\n    }\r\n}\r\n\r\nexport default profileReducer","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"e4ab732c-d4b7-4090-ae44-56e101c6d884\",\r\n    },\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n})\r\n\r\n\r\nexport const getUsers = (count = 7, currentPage) => {\r\n    return instance.get(`users?count=${count}&page=${currentPage}`,).then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nexport const followAPI = (id) =>{\r\n    return instance.delete(`follow/${id}`).then(response => {return response.data})\r\n}\r\n\r\nexport const unfollowAPI = (id) =>{\r\n    return instance.post(`follow/${id}`).then(response => {return response.data})\r\n}\r\n\r\nexport const getLogin = () =>{\r\n    return instance.get(`auth/me`).then(response => {return response.data})\r\n}\r\n\r\nexport const getLoginInfo = (id) =>{\r\n    return instance.get(`profile/`+id)\r\n}\r\n\r\nexport const getProfileInfo = (userId) =>{\r\n    return instance.get(`profile/`+userId)\r\n}\r\n\r\nexport const getStatusAPI = (userId) =>{\r\n    return instance.get('profile/status/'+userId)\r\n}\r\n\r\n\r\nexport const updateStatusAPI = (status) =>{\r\n    return instance.put('profile/status/', {status})\r\n}\r\n\r\nexport const loginAPI = (email, password, rememberMe = false, captcha = false) =>{\r\n    return instance.post('auth/login', {email, password, rememberMe, captcha})\r\n}\r\n\r\nexport const getCapthaAPI = () =>{\r\n    return instance.get(\"/security/get-captcha-url\")\r\n}\r\nexport const exitAPI = () =>{\r\n    return instance.delete('auth/login')\r\n}\r\n\r\n\r\n//// DIALOGS\r\n\r\nexport const getDialogsAPI = () =>{\r\n    return instance.get('dialogs/')\r\n}\r\n\r\nexport const startDialogAPI = (userId) =>{\r\n    return instance.put(`dialogs/` + userId)\r\n}\r\n\r\nexport const getMessagesAPI = (userId, page = 1, count =20) =>{\r\n    return instance.get(`dialogs/${userId}/messages/?page=${page}&count=${count}`)\r\n}\r\n\r\nexport const sendMessageAPI = (userId, body) => {\r\n    return instance.post(`dialogs/${userId}/messages`, {body})\r\n}\r\n\r\nexport const deleteMessageAPI = (messageId) =>{\r\n    return instance.delete(`dialogs/messages/${messageId}`)\r\n}\r\n\r\n\r\n\r\n/// PROFILE\r\nexport const savePhotoAPI = (image) =>{\r\n    const formData = new FormData()\r\n    formData.append(\"image\", image)\r\n    return instance.put(`profile/photo`, formData, {\r\n        headers:{\r\n            'Content-type': 'multipart/form-data'\r\n        }\r\n    })\r\n}\r\n\r\nexport const saveProfileAPI = (profile) =>{\r\n    return instance.put(\"profile/\", profile)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"FriendsNav_img__SQ3sL\"};","module.exports = __webpack_public_path__ + \"static/media/user.7cc7a630.png\";","import {\r\n    deleteMessageAPI,\r\n    getDialogsAPI,\r\n    getMessagesAPI,\r\n    sendMessageAPI,\r\n    startDialogAPI\r\n} from \"../dal/api\";\r\nimport {reset} from \"redux-form\"\r\n\r\nconst DIALOGS_LOADING = \"DIALOGS_LOADING\"\r\nconst GET_DIALOGS = \"GET_DIALOGS\"\r\nconst GET_MESSAGES = \"GET_MESSAGES\"\r\nconst SET_MESSAGES_LOADING = \"dialogs/SET_MESSAGES_LOADING\"\r\n\r\nlet initialState = {\r\n    dialogsData : [],\r\n    messageData : [],\r\n    dialogsLoading: true,\r\n    messagesLoading: false,\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DIALOGS:\r\n            return {...state, dialogsData: action.dialogs}\r\n        case DIALOGS_LOADING:\r\n            return {...state, dialogsLoading: action.boolean}\r\n        case GET_MESSAGES:\r\n            return {...state, messageData: action.messageList.reverse()}\r\n        case SET_MESSAGES_LOADING:\r\n            return {...state, messagesLoading: action.boolean}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n/*ACTION CREATORS FOR DIALOGS/MESSAGES*/\r\n\r\nexport const getDialogs = (dialogs) => ({type: GET_DIALOGS, dialogs})\r\nexport const dialogsLoading = (boolean) =>({type:DIALOGS_LOADING, boolean})\r\nexport const messagesLoading = (boolean) =>({type:SET_MESSAGES_LOADING, boolean})\r\nexport const getMessages = (messageList) => ({type:GET_MESSAGES , messageList})\r\n\r\nexport const getDialogsPage = () => async (dispatch) => {\r\n    dispatch(dialogsLoading(true))\r\n    let response = await getDialogsAPI()\r\n    dispatch(getDialogs(response.data))\r\n    dispatch(dialogsLoading(false))\r\n}\r\n\r\nexport const startDialog = (userId) => async (dispatch) => {\r\n    await startDialogAPI(userId)\r\n}\r\n\r\nexport const getMessagesList = (userId) => async (dispatch) =>{\r\n    dispatch(messagesLoading(true))\r\n    let response = await  getMessagesAPI(userId)\r\n    dispatch(getMessages(response.data.items))\r\n    dispatch(messagesLoading(false))\r\n}\r\nexport const sendMessage = (userId, body) => async (dispatch) =>{\r\n    await sendMessageAPI(userId, body)\r\n    dispatch(reset(\"sendMessage\"))\r\n}\r\n\r\nexport const deleteMessage = (messageId) => async (dispatch) =>{\r\n    await deleteMessageAPI(messageId)\r\n}\r\n\r\nexport default dialogsReducer"],"sourceRoot":""}